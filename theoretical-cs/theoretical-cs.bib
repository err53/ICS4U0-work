
@online{aroraBestDataAnalytics2020,
  title = {Best {{Data Analytics Certifications}} for 2020},
  author = {Arora, Simran Kaur},
  date = {2020-06-15},
  url = {https://hackr.io/blog/best-data-analytics-certification},
  urldate = {2020-12-17},
  abstract = {There is an overabundance of best data analytics certification programs offered on both online and offline modes. In this write-up, we would be solely focusing on the top-rated online certifications.},
  file = {/home/jhuang/Zotero/storage/HYL8BF46/best-data-analytics-certification.html},
  langid = {english},
  organization = {{Hackr.io}}
}

@online{ComputerScience2017,
  title = {Computer {{Science}}},
  date = {2017-02-08T15:39:55-05:00},
  url = {https://uwaterloo.ca/computer-science/future-undergraduate-students/undergraduate-programs-and-courses/computer-science},
  urldate = {2020-12-18},
  abstract = {Program | Degrees | Co-op|Regular | Specializations | First year courses | Graduate studies Program Computer Science focuses on the study of software, algorithms, programming, and the limits of computation. Using a combination of theory and application, you will learn how to describe problems in a formal, precise way so that machines can solve them. You will also learn about},
  file = {/home/jhuang/Zotero/storage/DGNSRASF/computer-science.html},
  langid = {english},
  organization = {{Cheriton School of Computer Science}}
}

@online{foggSoftwareTestingFintech2020,
  title = {Software {{Testing}} and {{Fintech}}},
  author = {Fogg, Erik},
  date = {2020-12-09T19:22:13+00:00},
  url = {https://itchronicles.com/fintech/software-testing-and-fintech/},
  urldate = {2020-12-17},
  abstract = {Fintech requires that software be developed to rigorous standards to ensure the safety of the users and the reputation of the developer},
  file = {/home/jhuang/Zotero/storage/JHVAJPHK/software-testing-and-fintech.html},
  langid = {american},
  organization = {{ITChronicles}}
}

@online{governmentofcanadaDatabaseAnalystCanada2020,
  title = {Database {{Analyst}} in {{Canada}}},
  author = {{Government of Canada}},
  date = {2020-12-11},
  url = {https://www.jobbank.gc.ca/marketreport/requirements/17873/ca},
  urldate = {2020-12-17},
  file = {/home/jhuang/Zotero/storage/28AZBHRL/ca.html}
}

@online{jobheroDatabaseAnalystJob2020,
  title = {Database {{Analyst Job Description}}},
  author = {{JobHero}},
  date = {2020},
  url = {https://www.jobhero.com/job-description/examples/data-systems-administration/database-analyst},
  urldate = {2020-12-17},
  abstract = {Detailed examples of skills required for a database analyst job description are available on JobHero. Find out more about what you need for the job!},
  file = {/home/jhuang/Zotero/storage/4G7AC2TR/database-analyst.html},
  langid = {american},
  organization = {{JobHero}}
}

@article{lamport1978time,
  title = {Time, Clocks and the Ordering of Events in a Distributed System},
  author = {Lamport, Leslie},
  date = {1978-07},
  journaltitle = {Communications of the ACM 21, 7 (July 1978), 558-565. Reprinted in several collections, including Distributed Computing: Concepts and Implementations, McEntire et al., ed. IEEE Press, 1984.},
  edition = {Communications of the ACM 21, 7 (July 1978), 558-565. Reprinted in several collections, including Distributed Computing: Concepts and Implementations, McEntire et al., ed. IEEE Press, 1984.},
  pages = {558--565},
  url = {https://www.microsoft.com/en-us/research/publication/time-clocks-ordering-events-distributed-system/},
  abstract = {Jim Gray once told me that he had heard two different opinions of this paper: that it's trivial and that it's brilliant. I can't argue with the former, and I am disinclined to argue with the latter. The origin of this paper was the note The Maintenance of Duplicate Databases by Paul Johnson and Bob Thomas. I believe their note introduced the idea of using message timestamps in a distributed algorithm. I happen to have a solid, visceral understanding of special relativity (see [5]). This enabled me to grasp immediately the essence of what they were trying to do. Special relativity teaches us that there is no invariant total ordering of events in space-time; different observers can disagree about which of two events happened first. There is only a partial order in which an event e1 precedes an event e2 iff e1 can causally affect e2. I realized that the essence of Johnson and Thomas's algorithm was the use of timestamps to provide a total ordering of events that was consistent with the causal order. This realization may have been brilliant. Having realized it, everything else was trivial. Because Thomas and Johnson didn't understand exactly what they were doing, they didn't get the algorithm quite right; their algorithm permitted anomalous behavior that essentially violated causality. I quickly wrote a short note pointing this out and correcting the algorithm. It didn't take me long to realize that an algorithm for totally ordering events could be used to implement any distributed system. A distributed system can be described as a particular sequential state machine that is implemented with a network of processors. The ability to totally order the input requests leads immediately to an algorithm to implement an arbitrary state machine by a network of processors, and hence to implement any distributed system. So, I wrote this paper, which is about how to implement an arbitrary distributed state machine. As an illustration, I used the simplest example of a distributed system I could think ofâ€“a distributed mutual exclusion algorithm. This is my most often cited paper. Many computer scientists claim to have read it. But I have rarely encountered anyone who was aware that the paper said anything about state machines. People seem to think that it is about either the causality relation on events in a distributed system, or the distributed mutual exclusion problem. People have insisted that there is nothing about state machines in the paper. I've even had to go back and reread it to convince myself that I really did remember what I had written. The paper describes the synchronization of logical clocks. As something of an afterthought, I decided to see what kind of synchronization it provided for real-time clocks. So, I included a theorem about real-time synchronization. I was rather surprised by how difficult the proof turned out to be. This was an indication of what lay ahead in [62]. This paper won the 2000 PODC Influential Paper Award (later renamed the Edsger W. Dijkstra Prize in Distributed Computing). It won an ACM SIGOPS Hall of Fame Award in 2007.},
  file = {/home/jhuang/Zotero/storage/FB8FTAR9/Lamport - 2016 - Time, Clocks and the Ordering of Events in a Distr.pdf},
  note = {2000 PODC Influential Paper Award (later renamed the Edsger W. Dijkstra Prize in Distributed Computing). Also awarded an ACM SIGOPS Hall of Fame Award in 2007.}
}

@article{lamportTuringLectureComputer2015,
  title = {Turing Lecture: {{The}} Computer Science of Concurrency: The Early Years},
  shorttitle = {Turing Lecture: {{The}} Computer Science of Concurrency: The Early Years},
  author = {Lamport, Leslie},
  date = {2015-05-21},
  journaltitle = {Commun. ACM},
  volume = {58},
  pages = {71--76},
  issn = {0001-0782},
  doi = {10.1145/2771951},
  url = {https://cacm.acm.org/magazines/2015/6/187316-turing-lecture-the-computer-science-of-concurrency/fulltext},
  urldate = {2020-12-17},
  abstract = {Leslie Lamport is the recipient of the 2013 ACM A.M. Turing Award.},
  file = {/home/jhuang/Zotero/storage/4SYJC6LK/lamport2015.pdf},
  number = {6}
}

@online{segalBecomingFinancialAnalyst2020,
  title = {Becoming a {{Financial Analyst}}},
  author = {Segal, Troy},
  date = {2020-06-24},
  url = {https://www.investopedia.com/articles/financialcareers/06/financialanalyst.asp},
  urldate = {2020-12-17},
  abstract = {Understand the types of career paths you can take as a financial analyst and learn the education and skills you need to launch a career in this field.},
  file = {/home/jhuang/Zotero/storage/YYSHLG9Q/financialanalyst.html},
  langid = {english},
  organization = {{Investopedia}}
}


